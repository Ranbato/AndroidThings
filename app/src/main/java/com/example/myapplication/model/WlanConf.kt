/**
 * Unifi Controller API spec
 *
 * Reverse engineered API for Ubiquiti Unifi Controller
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: github@container42.de
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.lambertland.kotlin.unifiapi.generated.model


import com.fasterxml.jackson.annotation.JsonProperty
import kotlinx.serialization.SerialName
import java.io.Serializable

/**
 * 
 *
 * @param enabled 
 * @param name 
 * @param security 
 * @param usergroupId 
 * @param wpaEnc 
 * @param wpaMode 
 * @param xPassphrase 
 * @param id 
 * @param bcFilterEnabled 
 * @param bcFilterList 
 * @param dtimMode 
 * @param dtimNa 
 * @param dtimNg 
 * @param groupRekey 
 * @param isGuest 
 * @param macFilterEnabled 
 * @param macFilterList 
 * @param macFilterPolicy 
 * @param minrateNaAdvertisingRates 
 * @param minrateNaDataRateKbps 
 * @param minrateNaEnabled 
 * @param minrateNgAdvertisingRates 
 * @param minrateNgDataRateKbps 
 * @param minrateNgEnabled 
 * @param schedule 
 * @param scheduleEnabled 
 * @param scheduleReversed 
 * @param radiusDasEnabled 
 * @param hotspot2confEnabled 
 * @param bssTransition 
 * @param authCache 
 * @param radiusprofileId 
 * @param pmfMode 
 * @param bSupported 
 * @param siteId 
 * @param wepIdx 
 * @param xIappKey 
 * @param apGroupIds 
 * @param wlanBand 
 * @param networkconfId 
 * @param iappEnabled 
 * @param scheduleWithDuration 
 * @param optimizeIotWifiConnectivity 
 * @param dtim6e 
 * @param wlanBands 
 * @param settingPreference 
 * @param minrateSettingPreference 
 * @param fastRoamingEnabled 
 * @param hideSsid 
 * @param l2Isolation 
 * @param mcastenhanceEnabled 
 * @param no2ghzOui 
 * @param proxyArp 
 * @param radiusMacAuthEnabled 
 * @param radiusMacaclFormat 
 * @param saeGroups 
 * @param saePsk 
 * @param uapsdEnabled 
 * @param wpa3Enhanced192 
 * @param wpa3FastRoaming 
 * @param wpa3Support 
 * @param wpa3Transition 
 */
@kotlinx.serialization.Serializable
data class WlanConf (

    @SerialName("enabled")
    val enabled: kotlin.Boolean,

    @SerialName("name")
    val name: kotlin.String,

    @SerialName("security")
    val security: WlanConf.Security = Security.WPAPSK,

    @SerialName("usergroup_id")
    val usergroupId: kotlin.String,

    @SerialName("wpa_enc")
    val wpaEnc: WlanConf.WpaEnc = WpaEnc.CCMP,

    @SerialName("wpa_mode")
    val wpaMode: WlanConf.WpaMode = WpaMode.WPA2,

    @SerialName("x_passphrase")
    val xPassphrase: kotlin.String,

    @SerialName("_id")
    val id: kotlin.String? = null,

    @SerialName("bc_filter_enabled")
    val bcFilterEnabled: kotlin.Boolean? = null,

    @SerialName("bc_filter_list")
    val bcFilterList: kotlin.Array<kotlin.String>? = null,

    @SerialName("dtim_mode")
    val dtimMode: kotlin.String? = null,

    @SerialName("dtim_na")
    val dtimNa: kotlin.Int? = null,

    @SerialName("dtim_ng")
    val dtimNg: kotlin.Int? = null,

    @SerialName("group_rekey")
    val groupRekey: kotlin.Int? = null,

    @SerialName("is_guest")
    val isGuest: kotlin.Boolean? = null,

    @SerialName("mac_filter_enabled")
    val macFilterEnabled: kotlin.Boolean? = null,

    @SerialName("mac_filter_list")
    val macFilterList: kotlin.Array<kotlin.String>? = null,

    @SerialName("mac_filter_policy")
    val macFilterPolicy: kotlin.String? = null,

    @SerialName("minrate_na_advertising_rates")
    val minrateNaAdvertisingRates: kotlin.Boolean? = null,

    @SerialName("minrate_na_data_rate_kbps")
    val minrateNaDataRateKbps: kotlin.Int? = null,

    @SerialName("minrate_na_enabled")
    val minrateNaEnabled: kotlin.Boolean? = null,

    @SerialName("minrate_ng_advertising_rates")
    val minrateNgAdvertisingRates: kotlin.Boolean? = null,

    @SerialName("minrate_ng_data_rate_kbps")
    val minrateNgDataRateKbps: kotlin.Int? = null,

    @SerialName("minrate_ng_enabled")
    val minrateNgEnabled: kotlin.Boolean? = null,

    @SerialName("schedule")
    val schedule: kotlin.Array<kotlin.String>? = null,

    @SerialName("schedule_enabled")
    val scheduleEnabled: kotlin.Boolean? = null,

    @SerialName("schedule_reversed")
    val scheduleReversed: kotlin.Boolean? = null,

    @SerialName("radius_das_enabled")
    val radiusDasEnabled: kotlin.Boolean? = null,

    @SerialName("hotspot2conf_enabled")
    val hotspot2confEnabled: kotlin.Boolean? = null,

    @SerialName("bss_transition")
    val bssTransition: kotlin.Boolean? = null,

    @SerialName("auth_cache")
    val authCache: kotlin.Boolean? = null,

    @SerialName("radiusprofile_id")
    val radiusprofileId: kotlin.String? = null,

    @SerialName("pmf_mode")
    val pmfMode: kotlin.String? = null,

    @SerialName("b_supported")
    val bSupported: kotlin.Boolean? = null,

    @SerialName("site_id")
    val siteId: kotlin.String? = null,

    @SerialName("wep_idx")
    val wepIdx: kotlin.Int? = null,

    @SerialName("x_iapp_key")
    val xIappKey: kotlin.String? = null,

    @SerialName("ap_group_ids")
    val apGroupIds: kotlin.Array<kotlin.String>? = null,

    @SerialName("wlan_band")
    val wlanBand: kotlin.String? = null,

    @SerialName("networkconf_id")
    val networkconfId: kotlin.String? = null,

    @SerialName("iapp_enabled")
    val iappEnabled: kotlin.Boolean? = null,

    @SerialName("schedule_with_duration")
    val scheduleWithDuration: kotlin.Array<kotlin.String>? = null,

    @SerialName("optimize_iot_wifi_connectivity")
    val optimizeIotWifiConnectivity: kotlin.Boolean? = null,

    @SerialName("dtim_6e")
    val dtim6e: kotlin.Int? = null,

    @SerialName("wlan_bands")
    val wlanBands: kotlin.Array<kotlin.String>? = null,

    @SerialName("setting_preference")
    val settingPreference: kotlin.String? = null,

    @SerialName("minrate_setting_preference")
    val minrateSettingPreference: kotlin.String? = null,

    @SerialName("fast_roaming_enabled")
    val fastRoamingEnabled: kotlin.Boolean? = null,

    @SerialName("hide_ssid")
    val hideSsid: kotlin.Boolean? = null,

    @SerialName("l2_isolation")
    val l2Isolation: kotlin.Boolean? = null,

    @SerialName("mcastenhance_enabled")
    val mcastenhanceEnabled: kotlin.Boolean? = null,

    @SerialName("no2ghz_oui")
    val no2ghzOui: kotlin.Boolean? = null,

    @SerialName("proxy_arp")
    val proxyArp: kotlin.Boolean? = null,

    @SerialName("radius_mac_auth_enabled")
    val radiusMacAuthEnabled: kotlin.Boolean? = null,

    @SerialName("radius_macacl_format")
    val radiusMacaclFormat: kotlin.String? = null,

    @SerialName("sae_groups")
    val saeGroups: kotlin.Array<kotlin.String>? = null,

    @SerialName("sae_psk")
    val saePsk: kotlin.Array<kotlin.String>? = null,

    @SerialName("uapsd_enabled")
    val uapsdEnabled: kotlin.Boolean? = null,

    @SerialName("wpa3_enhanced_192")
    val wpa3Enhanced192: kotlin.Boolean? = null,

    @SerialName("wpa3_fast_roaming")
    val wpa3FastRoaming: kotlin.Boolean? = null,

    @SerialName("wpa3_support")
    val wpa3Support: kotlin.Boolean? = null,

    @SerialName("wpa3_transition")
    val wpa3Transition: kotlin.Boolean? = null

) : Serializable {
    companion object {
        private const val serialVersionUID: Long = 123
    }

    /**
     * 
     *
     * Values: WPAPSK,WPAEAP,WEP
     */
    enum class Security(val value: kotlin.String) {
        @JsonProperty(value = "wpapsk") WPAPSK("wpapsk"),
        @JsonProperty(value = "wpaeap") WPAEAP("wpaeap"),
        @JsonProperty(value = "wep") WEP("wep");
    }
    /**
     * 
     *
     * Values: CCMP
     */
    enum class WpaEnc(val value: kotlin.String) {
        @JsonProperty(value = "ccmp") CCMP("ccmp");
    }
    /**
     * 
     *
     * Values: WPA2
     */
    enum class WpaMode(val value: kotlin.String) {
        @JsonProperty(value = "wpa2") WPA2("wpa2");
    }
}

